from django import template
from map.PysharkPackage import Configurate
from django.utils.html import conditional_escape
from django.utils.safestring import mark_safe
import re
register = template.Library()


@register.simple_tag
def editstr(value, searchStr, replacement):
    value = str(value)
    searchStr = str(searchStr)
    replacement = str(replacement)
    return mark_safe(value.replace(searchStr, replacement))


# This functions colors a certain part of the input text
@register.filter
def color_txt(text, color):
    possibleTypes = (map(lambda x: x.upper(),Configurate.Pattern.PossibleTypes ))
    possibleTypes = list(possibleTypes)
    for st in possibleTypes:
        ins = re.compile(re.escape(st), re.IGNORECASE)
        text = ins.sub('<span style="color:{color}">{text}</span>'.format(color=color, text=st), text)
    return mark_safe(text)